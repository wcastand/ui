import * as React from 'react'
import { useRef, useMemo, useCallback, useEffect } from 'react'
import { animated, useSpring, config } from 'react-spring'
import { useObserver } from '@alexvcasillas/use-observer'
import { apply, tw } from 'twind'
import { css } from 'twind/css'

export const container = apply(
	css`
		scroll-snap-align: start;
	`,
	apply`w-screen relative top-0 left-0 text-gray-900 font-sans font-bold p-0 lg:p-12`
)
export const section = apply`relative h-full w-full flex justify-center items-center bg-white pt-8 md:(pt-0)`
export const image = apply`w-full h-full object-cover`

export type TitleProps = {
	title: string
	subtitle?: string
} & React.HTMLAttributes<HTMLHeadElement>

export function Title({ title, subtitle, className }: TitleProps) {
	const { inView, ref } = useObserver({ threshold: 0.5 })
	const props = useSpring({
		cancel: !inView,
		delay: 250,
		config: config.molasses,
		to: { transform: 'translateX(0%)', opacity: 1 },
		from: { transform: 'translateX(20%)', opacity: 0 },
	})

	return (
		<animated.h2
			ref={ref}
			style={props}
			className={tw(
				'z-10 absolute top-4 left-4 text-5xl uppercase font-sans font-bold tracking-tighter flex justify-start sm:(items-end flex-row) items-start flex-col',
				className
			)}
		>
			<span className={tw('flex-1')}>{title}</span>{' '}
			{subtitle && <span className={tw('flex-1 pl-2 text-lg tracking-normal')}>- {subtitle}</span>}
		</animated.h2>
	)
}

export type CanvasProps = {
	containerRef: React.RefObject<HTMLElement>
	FPS: number
	draw: (ctx: CanvasRenderingContext2D | null, size: { w: number; h: number }) => void
} & React.HTMLAttributes<HTMLCanvasElement>

export function Canvas({ containerRef, draw, FPS = 60, ...props }: CanvasProps) {
	const ref = useRef<HTMLCanvasElement>(null)
	const lastFrameTime = useRef(0)
	const FRAME_MIN_TIME = useMemo(() => (1000 / 60) * (60 / FPS) - (1000 / 60) * 0.5, [FPS])

	function resize() {
		if (ref.current === null || !containerRef.current) return
		const rect = containerRef.current.getBoundingClientRect()
		const canvas = ref.current
		canvas.width = rect.width
		canvas.height = rect.height
	}

	useEffect(() => {
		if (ref.current === null || !containerRef.current) return
		resize()
		const canvas = ref.current
		const context = canvas.getContext('2d')
		let animationFrameId = 0
		//Our draw came here
		const render = (time: number) => {
			if (time - lastFrameTime.current < FRAME_MIN_TIME) {
				//skip the frame if the call is too early
				requestAnimationFrame(render)
				return // return as there is nothing to do
			}
			lastFrameTime.current = time
			draw(context, { w: canvas.width, h: canvas.height })
			animationFrameId = window.requestAnimationFrame(render)
		}
		window.requestAnimationFrame(render)

		return () => {
			window.cancelAnimationFrame(animationFrameId)
		}
	}, [draw])

	useEffect(() => {
		document.addEventListener('resize', resize)
		return () => document.removeEventListener('resize', resize)
	})
	return <canvas ref={ref} {...props} />
}

export type MiniCanvasProps = {
	draw: (ctx: CanvasRenderingContext2D | null, frameCount: number) => void
} & React.HTMLAttributes<HTMLCanvasElement>
export function MiniCanvas({ draw, ...props }: MiniCanvasProps) {
	const { inView, ref } = useObserver({ threshold: 0.5 })
	const pdraw = useCallback(
		(ctx, frameCount) => {
			if (inView && ref.current) draw(ctx, frameCount)
		},
		[draw, ref, inView]
	)
	return (
		<div
			ref={ref}
			className={tw(
				'relative',
				css`
					width: 100px;
					height: 100px;
				`
			)}
		>
			<Canvas containerRef={ref} draw={pdraw} {...props} />
		</div>
	)
}

export const SkiDude = ({ size, ...props }: { size?: string } & React.HTMLAttributes<HTMLOrSVGElement>) => (
	<svg height={size ?? '24px'} viewBox="0 0 512.01561 512" width={size ?? '24px'} xmlns="http://www.w3.org/2000/svg" {...props}>
		<path
			d="m235.945312 245.773438c-3.597656.027343-6.824218-2.207032-8.066406-5.585938-1.246094-3.375-.234375-7.167969 2.519532-9.484375l267.53125-228.648437c3.585937-3.0625 8.976562-2.640626 12.039062.945312 3.0625 3.589844 2.640625 8.980469-.945312 12.042969l-267.53125 228.648437c-1.539063 1.335938-3.507813 2.074219-5.546876 2.082032zm0 0"
			fill="#919d9e"
		/>
		<path
			d="m153.242188 316.234375c-3.574219 0-6.773438-2.226563-8.007813-5.582031-1.238281-3.355469-.25-7.125 2.46875-9.445313l48.460937-41.394531c3.585938-3.0625 8.976563-2.640625 12.039063.945312 3.066406 3.589844 2.640625 8.980469-.945313 12.042969l-48.46875 41.386719c-1.546874 1.320312-3.511718 2.046875-5.546874 2.046875zm0 0"
			fill="#919d9e"
		/>
		<path
			d="m284.585938 205.496094c-12.945313-5.214844-27.722657.445312-33.875 12.972656l-5.976563 11.605469-8.191406-29.097657c-3.863281-13.59375-14.171875-24.414062-27.5625-28.929687l-21.757813-7.253906c-19.511718-6.523438-40.894531 1.800781-50.859375 19.796875l-45.738281 82.433594c-12.25 22.035156-9.257812 49.402343 7.464844 68.265624l-19.582032-17.167968c-7.105468-6.003906-17.707031-5.21875-23.84375 1.769531-6.136718 6.988281-5.546874 17.605469 1.324219 23.871094l46.734375 41.054687c5.761719 5.09375 14.222656 5.691406 20.640625 1.457032 6.421875-4.234376 9.203125-12.246094 6.789063-19.546876l15.929687 15.359376c3.304688 3.1875 5.1875 7.574218 5.21875 12.167968.035157 4.59375-1.785156 9.003906-5.046875 12.238282l-36.335937 36.285156-17.066407 17.066406c-9.703124 10.042969-9.5625 26.011719.3125 35.886719 9.875 9.871093 25.839844 10.011719 35.886719.308593l17.167969-16.960937 49.28125-48.8125c9.96875-9.828125 15.472656-23.3125 15.230469-37.308594-.242188-13.996093-6.207031-27.285156-16.511719-36.761719l-35.753906-32.851562c-5.988282-5.542969-7.238282-14.539062-2.988282-21.503906l28.332032-46.335938c1.777344-2.863281 5.074218-4.410156 8.414062-3.949218 3.339844.460937 6.09375 2.84375 7.03125 6.082031l7.253906 25.769531c2.445313 8.730469 8.265626 16.128906 16.171876 20.566406 7.910156 4.433594 17.257812 5.539063 25.980468 3.070313l2.050782-.597657c9.144531-2.550781 16.8125-8.796874 21.160156-17.234374l25.003906-48.640626c3.214844-6.25 3.71875-13.546874 1.398438-20.179687-2.324219-6.632813-7.273438-12.015625-13.6875-14.894531zm0 0"
			fill="#668892"
		/>
		<path
			d="m162.132812 110.949219h.769532c-3.523438 20.117187 5.242187 40.40625 22.3125 51.621093 17.066406 11.21875 39.167968 11.21875 56.238281 0 17.066406-11.214843 25.835937-31.503906 22.3125-51.621093h.769531c4.710938 0 8.53125-3.820313 8.53125-8.535157v-17.066406c0-4.710937-3.820312-8.53125-8.53125-8.53125 0-22.667968-13.398437-45.296875-34.238281-50.195312 0-.339844.101563-.664063.101563-1.007813 0-9.425781-7.640626-17.066406-17.066407-17.066406s-17.066406 7.640625-17.066406 17.066406c0 .34375.085937.667969.101563 1.007813-20.835938 4.898437-34.234376 27.527344-34.234376 50.195312-4.710937 0-8.53125 3.820313-8.53125 8.53125v17.066406c0 4.714844 3.820313 8.535157 8.53125 8.535157zm39.476563-72.988281c.109375.113281.246094.199218.367187.308593-.121093-.109375-.257812-.195312-.367187-.308593zm23.039063.316406c.121093-.109375.257812-.203125.375-.316406-.085938.113281-.222657.207031-.339844.316406zm-7.902344 4.0625c-2.222656.457031-4.515625.457031-6.742188 0 2.226563.457031 4.519532.457031 6.742188 0zm5.914062-2.429688c-.289062.1875-.613281.324219-.914062.492188.257812-.167969.582031-.28125.871094-.492188zm-2.796875 1.484375c-.554687.21875-1.144531.355469-1.707031.527344.519531-.171875 1.152344-.308594 1.664062-.527344zm-15.773437-1.484375c.292968.1875.617187.324219.914062.492188-.339844-.167969-.664062-.28125-.953125-.492188zm2.800781 1.484375c.554687.21875 1.144531.355469 1.707031.527344-.605468-.171875-1.195312-.308594-1.75-.527344zm0 0"
			fill="#668892"
		/>
		<path
			d="m296.875 240.570312-25.003906 48.640626c-4.347656 8.4375-12.015625 14.683593-21.160156 17.234374l-2.050782.597657c-8.722656 2.46875-18.070312 1.363281-25.980468-3.070313-7.90625-4.4375-13.726563-11.835937-16.171876-20.566406l-7.253906-25.769531c-.9375-3.238281-3.691406-5.621094-7.03125-6.082031-3.339844-.460938-6.636718 1.085937-8.414062 3.949218l-28.332032 46.335938c-45.910156-5.972656-64.851562-34.816406-64.851562-34.816406l45.738281-82.433594c9.964844-17.996094 31.347657-26.320313 50.859375-19.796875l21.757813 7.253906c13.390625 4.515625 23.699219 15.335937 27.5625 28.929687l8.191406 29.097657 5.976563-11.605469c6.152343-12.527344 20.929687-18.1875 33.875-12.972656 6.414062 2.878906 11.363281 8.261718 13.6875 14.894531 2.320312 6.632813 1.816406 13.929687-1.398438 20.179687zm0 0"
			fill="#ff6c77"
		/>
		<path
			d="m195.5 430.265625-66.476562 65.707031c-10.085938 9.398438-25.804688 9.121094-35.554688-.628906-9.746094-9.746094-10.023438-25.464844-.625-35.554688l53.417969-53.332031c3.261719-3.234375 5.082031-7.644531 5.050781-12.238281-.035156-4.59375-1.914062-8.980469-5.222656-12.167969l-44.714844-43.007812c-19.550781-18.761719-23.972656-48.363281-10.75-72.019531 0 0 18.941406 28.84375 64.851562 34.816406-4.25 6.964844-3 15.960937 2.988282 21.503906l35.753906 32.851562c10.304688 9.476563 16.269531 22.765626 16.511719 36.761719.242187 13.996094-5.261719 27.480469-15.230469 37.308594zm0 0"
			fill="#445c71"
		/>
		<path
			d="m78.519531 318.121094 46.738281 41.054687c7.082032 6.21875 7.78125 17.003907 1.558594 24.085938-6.21875 7.078125-17.003906 7.777343-24.085937 1.558593l-46.734375-41.054687c-7.082032-6.222656-7.78125-17.003906-1.5625-24.085937 6.222656-7.082032 17.003906-7.78125 24.085937-1.558594zm0 0"
			fill="#919d9e"
		/>
		<path
			d="m162.132812 76.816406h102.402344c4.710938 0 8.53125 3.820313 8.53125 8.53125v17.066406c0 4.714844-3.820312 8.535157-8.53125 8.535157h-102.402344c-4.710937 0-8.53125-3.820313-8.53125-8.535157v-17.066406c0-4.710937 3.820313-8.53125 8.53125-8.53125zm0 0"
			fill="#e76573"
		/>
		<path
			d="m230.398438 25.613281c0 9.425781-7.640626 17.066407-17.066407 17.066407s-17.066406-7.640626-17.066406-17.066407 7.640625-17.066406 17.066406-17.066406 17.066407 7.640625 17.066407 17.066406zm0 0"
			fill="#ff6c77"
		/>
		<path
			d="m162.902344 110.949219c-3.523438 20.117187 5.242187 40.40625 22.3125 51.621093 17.066406 11.21875 39.167968 11.21875 56.238281 0 17.066406-11.214843 25.835937-31.503906 22.3125-51.621093zm0 0"
			fill="#fedebb"
		/>
		<path
			d="m230.296875 26.621094c-.496094 9.007812-7.941406 16.058594-16.964844 16.058594-9.019531 0-16.46875-7.050782-16.964843-16.058594-20.835938 4.898437-34.234376 27.527344-34.234376 50.195312h102.402344c0-22.667968-13.398437-45.296875-34.238281-50.195312zm0 0"
			fill="#fe9189"
		/>
		<path
			d="m92.835938 459.78125c-9.703126 10.046875-9.566407 26.011719.308593 35.886719s25.84375 10.015625 35.886719.3125l17.171875-16.964844-36.285156-36.28125zm0 0"
			fill="#668892"
		/>
		<path
			d="m375.464844 512.015625h-366.929688c-4.714844 0-8.535156-3.820313-8.535156-8.535156 0-4.710938 3.820312-8.53125 8.535156-8.53125h366.929688c14.140625 0 25.601562-11.460938 25.601562-25.601563 0-4.710937 3.820313-8.53125 8.535156-8.53125 4.710938 0 8.53125 3.820313 8.53125 8.53125-.027343 23.554688-19.113281 42.640625-42.667968 42.667969zm0 0"
			fill="#394f63"
		/>
	</svg>
)

export const RocketIcon = ({ size, ...props }: { size?: string } & React.HTMLAttributes<HTMLOrSVGElement>) => {
	const spring = useSpring({
		loop: true,
		config: { duration: 400 },
		to: { transformOrigin: 'center top', transform: 'scale(0.9)' },
		from: { transformOrigin: 'center top', transform: 'scale(1)' },
	})
	return (
		<svg version="1.0" x="0px" y="0px" viewBox="0 0 511 511" width={size ?? '24px'} height={size ?? '24px'} {...props}>
			<path
				fill="#FF5B5B"
				d="M212.1,325c-0.2,0.2-0.3,0.3-0.5,0.5l-74.4,65.7c-2.8,2.5-6.7,3.4-10.4,2.3c-3.6-1.1-6.4-3.9-7.5-7.6
	c-0.3-1-7-25.4-3.8-55.8c4.4-41.1,24.8-73.4,59.2-93.6c2.9-1.7,6.3-2,9.4-0.8c3.1,1.2,5.5,3.6,6.6,6.8l24.1,71.3
	C216.1,317.7,215.1,322,212.1,325z"
			/>
			<path
				fill="#FF193D"
				d="M390.8,390.7c-1.3,1.3-2.9,2.2-4.7,2.8c-3.6,1.1-7.5,0.2-10.4-2.3l-74.4-65.7
	c-3.3-2.9-4.6-7.6-3.1-11.7l24.1-71.3c1.1-3.1,3.5-5.6,6.6-6.8c3.1-1.2,6.5-0.9,9.4,0.8c34.3,20.2,54.8,52.5,59.2,93.6
	c3.2,30.4-3.5,54.8-3.8,55.8C393.1,387.7,392.1,389.4,390.8,390.7z"
			/>
			<path
				fill="#E1F1FA"
				d="M306.7,91.1H206.3c-4,0-7.7,2.2-9.6,5.7C173,140.4,161,183.6,161,225.2c0,8.7,0.5,17.6,1.6,26.4
	c3.1,25.6,10.6,52,22.4,78.4c7.5,16.8,16.8,33.7,27.5,50c18.7,28.6,35.4,45.8,36.1,46.5c2.1,2.1,4.9,3.3,7.9,3.3
	c2.9,0,5.7-1.2,7.8-3.2l0.1-0.1c0.7-0.7,17.4-17.9,36.1-46.5c10.7-16.4,20-33.2,27.5-50c11.8-26.4,19.3-52.8,22.4-78.4
	c1.1-8.8,1.6-17.7,1.6-26.4c0-41.6-12-84.8-35.7-128.3C314.4,93.3,310.7,91.1,306.7,91.1z"
			/>
			<animated.path
				fill="#FFF261"
				style={spring}
				d="M294.1,363h-75.2c-5.6,0-10.2,4.1-10.9,9.7c-0.5,4.3-0.8,8.6-0.8,12.8c0,52.3,39.7,93.7,41.4,95.4
	c2.1,2.1,4.9,3.3,7.9,3.3c2.9,0,5.7-1.2,7.8-3.2c0,0,0.1-0.1,0.1-0.1c1.7-1.7,41.4-43.1,41.4-95.4c0-4.2-0.3-8.5-0.8-12.8
	C304.3,367.2,299.7,363,294.1,363z"
			/>
			<path
				fill="#1B3B6B"
				d="M184,327.8l0,46.2c0,2.9,1.2,5.7,3.2,7.8c2.1,2.1,4.9,3.2,7.8,3.2h123c2.9,0,5.7-1.2,7.8-3.2
	s3.2-4.9,3.2-7.8v-46.2L184,327.8z"
			/>
			<path
				fill="#06CCAB"
				d="M280.2,222.5c-6.3,6.3-14.7,9.8-23.7,9.8c-18.5,0-33.5-15-33.5-33.5c0-8.9,3.5-17.4,9.8-23.7
	c6.3-6.3,14.7-9.8,23.7-9.8c8.9,0,17.4,3.5,23.7,9.8c6.3,6.3,9.8,14.7,9.8,23.7S286.5,216.2,280.2,222.5z"
			/>
			<path
				fill="#1B3B6B"
				d="M287.8,230.1c-8.4,8.4-19.5,13-31.3,13c-24.4,0-44.2-19.8-44.2-44.2c0-11.8,4.6-22.9,13-31.3
	c8.4-8.4,19.5-13,31.3-13c11.8,0,22.9,4.6,31.3,13c8.4,8.4,13,19.5,13,31.3C300.7,210.6,296.1,221.7,287.8,230.1z M240.7,183.1
	c-4.2,4.2-6.5,9.8-6.5,15.8c0,12.3,10,22.3,22.3,22.3c5.9,0,11.5-2.3,15.8-6.5c4.2-4.2,6.5-9.8,6.5-15.8c0-5.9-2.3-11.5-6.5-15.8
	s-9.8-6.5-15.8-6.5C250.5,176.5,245,178.9,240.7,183.1z"
			/>
			<path
				fill="#FF5B5B"
				d="M256.5,20.5c-3,0-5.8,1.2-7.9,3.3c-1.1,1.2-28.1,29.1-52,73h119.7c-23.9-43.9-50.9-71.8-52-73
	C262.3,21.7,259.5,20.5,256.5,20.5z"
			/>
			<path
				fill="#CDEBFC"
				d="M306.7,91.1h-50.2v338.7c2.9,0,5.7-1.2,7.8-3.2l0.1-0.1c0.7-0.7,17.4-17.9,36.1-46.5
	c10.7-16.4,20-33.2,27.5-50c11.8-26.4,19.3-52.8,22.4-78.4c1.1-8.8,1.6-17.7,1.6-26.4c0-41.6-12-84.8-35.7-128.3
	C314.4,93.3,310.7,91.1,306.7,91.1z"
			/>
			<animated.path
				fill="#FDBF00"
				style={spring}
				d="M294.1,363h-37.6l0,121.2l0,0c2.9,0,5.7-1.2,7.8-3.2l0.1-0.1c1.7-1.7,41.4-43.1,41.4-95.4
	c0-4.2-0.3-8.5-0.8-12.8C304.3,367.2,299.7,363,294.1,363z"
			/>
			<path fill="#001035" d="M256.5,327.8V385H318c2.9,0,5.7-1.2,7.8-3.2s3.2-4.9,3.2-7.8l0-46.2L256.5,327.8z" />
			<path
				fill="#1CADB5"
				d="M256.5,165.3C256.5,165.3,256.5,165.3,256.5,165.3l0,67l0,0c8.9,0,17.4-3.5,23.7-9.8
	c6.3-6.3,9.8-14.7,9.8-23.7s-3.5-17.4-9.8-23.7C273.9,168.8,265.4,165.3,256.5,165.3z"
			/>
			<path
				fill="#001035"
				d="M256.5,154.6v22c5.9,0,11.5,2.3,15.8,6.5s6.5,9.8,6.5,15.8c0,5.9-2.3,11.5-6.5,15.8
	s-9.8,6.5-15.8,6.5c0,0,0,0,0,0v22l0,0c11.8,0,22.9-4.6,31.3-13c8.4-8.4,13-19.5,13-31.3c0-11.8-4.6-22.9-13-31.3
	C279.4,159.2,268.3,154.6,256.5,154.6z"
			/>
			<path fill="#FF193D" d="M256.5,20.5l0,76.3h59.9c-23.9-43.9-50.9-71.8-52-73C262.3,21.7,259.5,20.5,256.5,20.5z" />
		</svg>
	)
}
